[CRAB]

jobtype = cmssw
scheduler = glite
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = cern

[CMSSW]

### The data you want to access (to be found on DBS)
#datasetpath=/BeamHaloExpress/BeamCommissioning09-Express-v1/FEVT
#datasetpath=/MinBias/Summer09-STARTUP3X_V8D_900GeV-v1/GEN-SIM-RECO
#datasetpath=None

###########################
datasetpath = THISDATASET
###########################

#dbs_url=http://cmsdbsprod.cern.ch/cms_dbs_caf_analysis_01/servlet/DBSServlet

### A single processed dataset can contain multiple runs (in the case of real data !!! )
### following selection can narrow down the run selection within a single processed dataset
### selection can be a comma-separated list of run numbers and run number ranges: 1,2,3-4
#######################
runselection = THISRUNNUMBER
#######################

### The ParameterSet you want to use
###########################
pset = THISCMSSWCONFIGFILE
###########################

### Splitting parameters
#total_number_of_events=20

###########################
total_number_of_events = THISNEVENTS 
###########################

#events_per_job = 1000
#number_of_jobs = 2

###########################
number_of_jobs = THISNJOBS
###########################

### The output files (comma separated list)
###########################
output_file = THISOUTPUTFILE
#output_file = QCDDiJetPt120to170__Summer08_IDEAL_V9_v1__GEN-SIM-RECO.root
###########################

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory

###########################
ui_working_dir = THISUIWORKINGDIR
###########################

###########################
outputdir = THISOUTPUTDIR
###########################

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/castor/cern.ch
### directory or tree of directory under the mounpoint 
#user_remote_dir=/user/a/apresyan
storage_element  =  srm-cms.cern.ch
storage_path  =  /srm/managerv2?SFN=/castor/cern.ch

##############################
user_remote_dir=THISUSERREMOTEDIR
##############################

### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 

###email notifications
thresholdLevel = 100
#eMail = apresyan@cern.ch

[GRID]

## RB/WMS management:
rb = CERN
#proxy_server = myproxy.cern.ch

##  Black and White Lists management:
## By Storage
##se_black_list = T0,T1

#se_white_list = grid-srm.physik.rwth-aachen.de

## By ComputingElement
#ce_black_list = gridce2.pi.infn.it
#ce_black_list = srm.ciemat.es,srm-3.t2.ucsd.edu,hephyse.oeaw.ac.at,maite.iihe.ac.be,t2-srm-02.lnl.infn.it,sbgse1.in2p3.fr,cmssrm.hep.wisc.edu,cmsdcache.pi.infn.it,srm.minnesota.edu,storm.ifca.es
#ce_white_list = 

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

